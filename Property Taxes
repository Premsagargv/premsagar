{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Loading the required modules to read the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Reading data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "Data = pd.read_csv(\"Train-1558085943169.csv\")\n",
    "Data1 = pd.read_csv(\"Test-1558085969635.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PropertyID</th>\n",
       "      <th>Borough</th>\n",
       "      <th>State</th>\n",
       "      <th>Surroundings</th>\n",
       "      <th>Address</th>\n",
       "      <th>ZipCode</th>\n",
       "      <th>Block</th>\n",
       "      <th>Lot</th>\n",
       "      <th>BldgClassCategory</th>\n",
       "      <th>NoOfResidentialUnits</th>\n",
       "      <th>NoOfCommercialUnits</th>\n",
       "      <th>TotalNoOfUnits</th>\n",
       "      <th>LandAreaInSqFt</th>\n",
       "      <th>GrossAreaInSqFt</th>\n",
       "      <th>YearOfConstruction</th>\n",
       "      <th>TaxClass_AtEvaluationTime</th>\n",
       "      <th>BldgClass_AtEvaluationTime</th>\n",
       "      <th>DateOfEvaluation</th>\n",
       "      <th>PropertyEvaluationvalue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>PR11101</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>1473 CROTONA PLACE</td>\n",
       "      <td>10456</td>\n",
       "      <td>2927</td>\n",
       "      <td>127</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1900</td>\n",
       "      <td>2394</td>\n",
       "      <td>1990</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-05-30</td>\n",
       "      <td>540000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PR11102</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>453 EAST 181</td>\n",
       "      <td>10457</td>\n",
       "      <td>3037</td>\n",
       "      <td>110</td>\n",
       "      <td>03 THREE FAMILY DWELLINGS</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1687</td>\n",
       "      <td>3037</td>\n",
       "      <td>2002</td>\n",
       "      <td>1</td>\n",
       "      <td>C0</td>\n",
       "      <td>2014-09-13</td>\n",
       "      <td>750000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PR11103</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>511 EAST 171 STREET</td>\n",
       "      <td>10457</td>\n",
       "      <td>2912</td>\n",
       "      <td>155</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2000</td>\n",
       "      <td>2400</td>\n",
       "      <td>1989</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-09-28</td>\n",
       "      <td>470000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PR11104</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>547 CLAREMONT PARKWAY</td>\n",
       "      <td>10457</td>\n",
       "      <td>2929</td>\n",
       "      <td>134</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2356</td>\n",
       "      <td>2394</td>\n",
       "      <td>1991</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-06-05</td>\n",
       "      <td>570000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>PR11105</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>2063 WASHINGTON AVENUE</td>\n",
       "      <td>10457</td>\n",
       "      <td>3036</td>\n",
       "      <td>140</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3346</td>\n",
       "      <td>2308</td>\n",
       "      <td>1993</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2015-02-07</td>\n",
       "      <td>640000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PR11106</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>3825 3RD AVENUE</td>\n",
       "      <td>10457</td>\n",
       "      <td>2912</td>\n",
       "      <td>26</td>\n",
       "      <td>14 RENTALS - 4-10 UNIT</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2000</td>\n",
       "      <td>5940</td>\n",
       "      <td>2007</td>\n",
       "      <td>2</td>\n",
       "      <td>S4</td>\n",
       "      <td>2015-03-27</td>\n",
       "      <td>1350000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PR11107</td>\n",
       "      <td>1</td>\n",
       "      <td>NY</td>\n",
       "      <td>BATHGATE</td>\n",
       "      <td>476 EAST 186 STREET</td>\n",
       "      <td>10458</td>\n",
       "      <td>3039</td>\n",
       "      <td>159</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2033</td>\n",
       "      <td>2400</td>\n",
       "      <td>1993</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-08-07</td>\n",
       "      <td>400000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PropertyID  Borough State Surroundings                 Address  ZipCode  \\\n",
       "0    PR11101        1    NY     BATHGATE      1473 CROTONA PLACE    10456   \n",
       "1    PR11102        1    NY     BATHGATE            453 EAST 181    10457   \n",
       "2    PR11103        1    NY     BATHGATE     511 EAST 171 STREET    10457   \n",
       "3    PR11104        1    NY     BATHGATE   547 CLAREMONT PARKWAY    10457   \n",
       "4    PR11105        1    NY     BATHGATE  2063 WASHINGTON AVENUE    10457   \n",
       "5    PR11106        1    NY     BATHGATE         3825 3RD AVENUE    10457   \n",
       "6    PR11107        1    NY     BATHGATE     476 EAST 186 STREET    10458   \n",
       "\n",
       "   Block  Lot          BldgClassCategory  NoOfResidentialUnits  \\\n",
       "0   2927  127    02 TWO FAMILY DWELLINGS                     2   \n",
       "1   3037  110  03 THREE FAMILY DWELLINGS                     3   \n",
       "2   2912  155    02 TWO FAMILY DWELLINGS                     2   \n",
       "3   2929  134    02 TWO FAMILY DWELLINGS                     2   \n",
       "4   3036  140    02 TWO FAMILY DWELLINGS                     2   \n",
       "5   2912   26     14 RENTALS - 4-10 UNIT                     4   \n",
       "6   3039  159    02 TWO FAMILY DWELLINGS                     2   \n",
       "\n",
       "   NoOfCommercialUnits  TotalNoOfUnits  LandAreaInSqFt  GrossAreaInSqFt  \\\n",
       "0                    0               2            1900             2394   \n",
       "1                    0               3            1687             3037   \n",
       "2                    0               2            2000             2400   \n",
       "3                    0               2            2356             2394   \n",
       "4                    0               2            3346             2308   \n",
       "5                    1               5            2000             5940   \n",
       "6                    0               2            2033             2400   \n",
       "\n",
       "   YearOfConstruction  TaxClass_AtEvaluationTime BldgClass_AtEvaluationTime  \\\n",
       "0                1990                          1                         B1   \n",
       "1                2002                          1                         C0   \n",
       "2                1989                          1                         B1   \n",
       "3                1991                          1                         B1   \n",
       "4                1993                          1                         B1   \n",
       "5                2007                          2                         S4   \n",
       "6                1993                          1                         B1   \n",
       "\n",
       "  DateOfEvaluation  PropertyEvaluationvalue  \n",
       "0       2014-05-30                 540000.0  \n",
       "1       2014-09-13                 750000.0  \n",
       "2       2014-09-28                 470000.0  \n",
       "3       2014-06-05                 570000.0  \n",
       "4       2015-02-07                 640000.0  \n",
       "5       2015-03-27                1350000.0  \n",
       "6       2014-08-07                 400000.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data.head(7)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PropertyID                     object\n",
       "Borough                         int64\n",
       "State                          object\n",
       "Surroundings                   object\n",
       "Address                        object\n",
       "ZipCode                         int64\n",
       "Block                           int64\n",
       "Lot                             int64\n",
       "BldgClassCategory              object\n",
       "NoOfResidentialUnits            int64\n",
       "NoOfCommercialUnits             int64\n",
       "TotalNoOfUnits                  int64\n",
       "LandAreaInSqFt                  int64\n",
       "GrossAreaInSqFt                 int64\n",
       "YearOfConstruction              int64\n",
       "TaxClass_AtEvaluationTime       int64\n",
       "BldgClass_AtEvaluationTime     object\n",
       "DateOfEvaluation               object\n",
       "PropertyEvaluationvalue       float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16810, 19)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Train_data.isnull().sum(axis=0)\n",
    "Data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Pre-processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Let's convert some of the columns to appropriate datatype\n",
    "Data['TaxClass_AtEvaluationTime'] = Data['TaxClass_AtEvaluationTime'].astype('category')\n",
    "Data['NoOfResidentialUnits']= Data['NoOfResidentialUnits'].astype('category')\n",
    "Data['Borough'] = Data['Borough'].astype('category')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PropertyID                      object\n",
       "Borough                       category\n",
       "State                           object\n",
       "Surroundings                    object\n",
       "Address                         object\n",
       "ZipCode                          int64\n",
       "Block                            int64\n",
       "Lot                              int64\n",
       "BldgClassCategory               object\n",
       "NoOfResidentialUnits          category\n",
       "NoOfCommercialUnits              int64\n",
       "TotalNoOfUnits                   int64\n",
       "LandAreaInSqFt                   int64\n",
       "GrossAreaInSqFt                  int64\n",
       "YearOfConstruction               int64\n",
       "TaxClass_AtEvaluationTime     category\n",
       "BldgClass_AtEvaluationTime      object\n",
       "DateOfEvaluation                object\n",
       "PropertyEvaluationvalue        float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropping unnesccesary Variables\n",
    "Data.drop([\"PropertyID\",\"Borough\",\"Surroundings\",\"State\",\"Address\",\"ZipCode\",\"Block\"],axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lot</th>\n",
       "      <th>BldgClassCategory</th>\n",
       "      <th>NoOfResidentialUnits</th>\n",
       "      <th>NoOfCommercialUnits</th>\n",
       "      <th>TotalNoOfUnits</th>\n",
       "      <th>LandAreaInSqFt</th>\n",
       "      <th>GrossAreaInSqFt</th>\n",
       "      <th>YearOfConstruction</th>\n",
       "      <th>TaxClass_AtEvaluationTime</th>\n",
       "      <th>BldgClass_AtEvaluationTime</th>\n",
       "      <th>DateOfEvaluation</th>\n",
       "      <th>PropertyEvaluationvalue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>127</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1900</td>\n",
       "      <td>2394</td>\n",
       "      <td>1990</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-05-30</td>\n",
       "      <td>540000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>110</td>\n",
       "      <td>03 THREE FAMILY DWELLINGS</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1687</td>\n",
       "      <td>3037</td>\n",
       "      <td>2002</td>\n",
       "      <td>1</td>\n",
       "      <td>C0</td>\n",
       "      <td>2014-09-13</td>\n",
       "      <td>750000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>155</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2000</td>\n",
       "      <td>2400</td>\n",
       "      <td>1989</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-09-28</td>\n",
       "      <td>470000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>134</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2356</td>\n",
       "      <td>2394</td>\n",
       "      <td>1991</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2014-06-05</td>\n",
       "      <td>570000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>140</td>\n",
       "      <td>02 TWO FAMILY DWELLINGS</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3346</td>\n",
       "      <td>2308</td>\n",
       "      <td>1993</td>\n",
       "      <td>1</td>\n",
       "      <td>B1</td>\n",
       "      <td>2015-02-07</td>\n",
       "      <td>640000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Lot          BldgClassCategory NoOfResidentialUnits  NoOfCommercialUnits  \\\n",
       "0  127    02 TWO FAMILY DWELLINGS                    2                    0   \n",
       "1  110  03 THREE FAMILY DWELLINGS                    3                    0   \n",
       "2  155    02 TWO FAMILY DWELLINGS                    2                    0   \n",
       "3  134    02 TWO FAMILY DWELLINGS                    2                    0   \n",
       "4  140    02 TWO FAMILY DWELLINGS                    2                    0   \n",
       "\n",
       "   TotalNoOfUnits  LandAreaInSqFt  GrossAreaInSqFt  YearOfConstruction  \\\n",
       "0               2            1900             2394                1990   \n",
       "1               3            1687             3037                2002   \n",
       "2               2            2000             2400                1989   \n",
       "3               2            2356             2394                1991   \n",
       "4               2            3346             2308                1993   \n",
       "\n",
       "  TaxClass_AtEvaluationTime BldgClass_AtEvaluationTime DateOfEvaluation  \\\n",
       "0                         1                         B1       2014-05-30   \n",
       "1                         1                         C0       2014-09-13   \n",
       "2                         1                         B1       2014-09-28   \n",
       "3                         1                         B1       2014-06-05   \n",
       "4                         1                         B1       2015-02-07   \n",
       "\n",
       "   PropertyEvaluationvalue  \n",
       "0                 540000.0  \n",
       "1                 750000.0  \n",
       "2                 470000.0  \n",
       "3                 570000.0  \n",
       "4                 640000.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_cols = [\"TaxClass_AtEvaluationTime\",\"NoOfResidentialUnits\",\"BldgClassCategory\",\"BldgClass_AtEvaluationTime\",\"DateOfEvaluation\"]\n",
    "Data = pd.get_dummies(Data,columns=cat_cols,drop_first=True,)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Spliting\n",
    "X = Data.copy().drop(\"PropertyEvaluationvalue\",axis=1)\n",
    "y = Data[\"PropertyEvaluationvalue\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(13448, 799)\n",
      "(13448,)\n",
      "(3362, 799)\n",
      "(3362,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)\n",
    "print(X_train.shape)\n",
    "print(y_train.shape)\n",
    "print(X_test.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "D:\\python\\lib\\site-packages\\sklearn\\preprocessing\\data.py:625: DataConversionWarning: Data with input dtype int64 were all converted to float64 by StandardScaler.\n",
      "  return self.partial_fit(X, y)\n",
      "D:\\python\\lib\\site-packages\\ipykernel_launcher.py:5: DataConversionWarning: Data with input dtype int64 were all converted to float64 by StandardScaler.\n",
      "  \"\"\"\n",
      "D:\\python\\lib\\site-packages\\pandas\\core\\indexing.py:543: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self.obj[item] = s\n",
      "D:\\python\\lib\\site-packages\\ipykernel_launcher.py:6: DataConversionWarning: Data with input dtype int64 were all converted to float64 by StandardScaler.\n",
      "  \n",
      "D:\\python\\lib\\site-packages\\pandas\\core\\indexing.py:543: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self.obj[item] = s\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(X_train.iloc[:,:5])\n",
    "\n",
    "X_train.iloc[:,:5] = scaler.transform(X_train.iloc[:,:5])\n",
    "X_test.iloc[:,:5] = scaler.transform(X_test.iloc[:,:5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "rfc_model = RandomForestClassifier(n_estimators = 100,random_state = 99)\n",
    "rfc_model.fit(X_train,y_train.values.ravel())\n",
    "predicted = rfc_model.predict(X_test)\n",
    "print('Random Forest',accuracy_score(y_test,predicted))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
